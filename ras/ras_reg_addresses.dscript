// -------------------------------------------------------------------------------------------------------------
//                              Copyright (C) 2022-2030 Laurent Ravera, IRAP Toulouse.
// -------------------------------------------------------------------------------------------------------------
//                              This file is part of the ATHENA X-IFU DRE SGSE tools.
//
//                              sgse tools javascripts are free software: you can redistribute it and/or modify
//                              it under the terms of the GNU General Public License as published by
//                              the Free Software Foundation, either version 3 of the License, or
//                              (at your option) any later version.
//
//                              This program is distributed in the hope that it will be useful,
//                              but WITHOUT ANY WARRANTY; without even the implied warranty of
//                              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//                              GNU General Public License for more details.
//
//                              You should have received a copy of the GNU General Public License
//                              along with this program.  If not, see <https://www.gnu.org/licenses/>.
// -------------------------------------------------------------------------------------------------------------
//    email                     laurent.ravera@irap.omp.eu
//    @file                     ras_reg_addresses.dscript
// -------------------------------------------------------------------------------------------------------------
//    @details
//
//    This file defines the RAS module register addresses.
//
// -------------------------------------------------------------------------------------------------------------


// firmware level commands and housekeepings

// RA sequences
const ADD_RAS_SEQ_PS = 0x0000;
const ADD_RAS_SEQ_GS = 0x00A0;
const ADD_RAS_SEQ_MODE = 0x00FF;

// RA levels
const ADD_RAS_PS_LOW  = 0x0100;
const ADD_RAS_PS_HIGH = 0x0101;
const ADD_RAS_GS_LOW  = 0x0102;
const ADD_RAS_GS_HIGH = 0x0103;
const ADD_RAS_LEVEL_MODE = 0x0104;

// Timings
const ADD_RAS_SEQ_DELAY = 0x0200;
const ADD_RAS_PS_OVERLAP = 0x0201;
const ADD_RAS_GS_OVERLAP = 0x0202;

// Test pattern
const ADD_RAS_TEST_PATTERN = 0x4100;
const ADD_RAS_TEST_PATTERN_ENABLE = 0x4150;

// Housekeepings (read only)
const ADD_RAS_HK_P5V0_ANA = 0x4600;
const ADD_RAS_HK_SPARE0 = 0x4601;
const ADD_RAS_HK_P2V5_ANA = 0x4602;
const ADD_RAS_HK_SPARE1 = 0x4603;
const ADD_RAS_HK_M2V5_ANA = 0x4604;
const ADD_RAS_HK_M2V5_DIG = 0x4605;
const ADD_RAS_HK_P3V3_DIG = 0x4606;
const ADD_RAS_HK_P2V5_DIG = 0x4607;
const ADD_RAS_HK_P1V2_DIG = 0x4608;
const ADD_RAS_HK_P2V5_DIG = 0x4608;
const ADD_RAS_HK_TEMP_1 = 0x4609;
const ADD_RAS_HK_TEMP_2 = 0x460A;
const ADD_RAS_HK_TEMP_3 = 0x460B;

// Status (read only)
const ADD_RAS_STATUS = 0x6000;
const ADD_RAS_FIRMWARE_VERSION = 0x6001;
const ADD_RAS_HARDWARE_VERSION = 0x6002;
