//
//  Copyright (C) 2021-2030 Laurent Ravera, IRAP Toulouse.
//  This file is part of the ATHENA X-IFU DRE test driving software.
//
//  ras-js is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
//  laurent.ravera@irap.omp.eu
//  default_configurations.dscript
//  In this script we define default RAS sequences.

include("./ras_parameters.dscript")

//------------------------------------------
// Defining X-IFU sequence (2 levels)
//------------------------------------------

seq_xifu_lsb = [nb_ras_lines];
seq_xifu_msb = [nb_ras_lines];

// Synchronisation signal sequence
sync_seq_xifu_lsb = 0x00000001;
sync_seq_xifu_msb = 0x00;

// Pixel select sequences
seq_xifu_lsb[ 0]  = 0x08040201;
seq_xifu_msb[ 0]  = 0x00;
seq_xifu_lsb[ 1]  = 0x10080402;
seq_xifu_msb[ 1]  = 0x00;
seq_xifu_lsb[ 2]  = 0x20100804;
seq_xifu_msb[ 2]  = 0x00;
seq_xifu_lsb[ 3]  = 0x40201008;
seq_xifu_msb[ 3]  = 0x00;
seq_xifu_lsb[ 4]  = 0x80402010;
seq_xifu_msb[ 4]  = 0x00;
seq_xifu_lsb[ 5]  = 0x00804020;
seq_xifu_msb[ 5]  = 0x01;
seq_xifu_lsb[ 6]  = 0x01008040;
seq_xifu_msb[ 6]  = 0x02;
seq_xifu_lsb[ 7]  = 0x02010080;
seq_xifu_msb[ 7]  = 0x00;
seq_xifu_lsb[ 8]  = 0x04020100;
seq_xifu_msb[ 8]  = 0x00;

// Group select sequences
seq_xifu_lsb[ 9]  = 0x000008FF;
seq_xifu_msb[ 9]  = 0x00;
seq_xifu_lsb[10]  = 0x000CF700;
seq_xifu_msb[10]  = 0x00;
seq_xifu_lsb[11]  = 0x0EF30000;
seq_xifu_msb[11]  = 0x00;
seq_xifu_lsb[12]  = 0xF1000000;
seq_xifu_msb[12]  = 0x0C;

// Spare sequences
seq_xifu_lsb[13]  = 0x00000000;
seq_xifu_msb[13]  = 0x00;
seq_xifu_lsb[14]  = 0x00000000;
seq_xifu_msb[14]  = 0x00;


//------------------------------------------
// Defining a sequence with all addresses On at the first period
//------------------------------------------

seq_start1_lsb = [nb_ras_lines];
seq_start1_msb = [nb_ras_lines];

// Synchronisation signal sequence
sync_start1_lsb = 0x00000001;
sync_start1_msb = 0x00;

// Pixel select sequences
seq_start1_lsb[ 0]  = 0x00000001;
seq_start1_msb[ 0]  = 0x00;
seq_start1_lsb[ 1]  = 0x00000001;
seq_start1_msb[ 1]  = 0x00;
seq_start1_lsb[ 2]  = 0x00000001;
seq_start1_msb[ 2]  = 0x00;
seq_start1_lsb[ 3]  = 0x00000001;
seq_start1_msb[ 3]  = 0x00;
seq_start1_lsb[ 4]  = 0x00000001;
seq_start1_msb[ 4]  = 0x00;
seq_start1_lsb[ 5]  = 0x00000001;
seq_start1_msb[ 5]  = 0x00;
seq_start1_lsb[ 6]  = 0x00000001;
seq_start1_msb[ 6]  = 0x00;
seq_start1_lsb[ 7]  = 0x00000001;
seq_start1_msb[ 7]  = 0x00;
seq_start1_lsb[ 8]  = 0x00000001;
seq_start1_msb[ 8]  = 0x00;

// Group select sequences
seq_start1_lsb[ 9]  = 0x00000001;
seq_start1_msb[ 9]  = 0x00;
seq_start1_lsb[10]  = 0x00000001;
seq_start1_msb[10]  = 0x00;
seq_start1_lsb[11]  = 0x00000001;
seq_start1_msb[11]  = 0x00;
seq_start1_lsb[12]  = 0x00000001;
seq_start1_msb[12]  = 0x0C;

// Spare sequences
seq_start1_lsb[13]  = 0x00000000;
seq_start1_msb[13]  = 0x00;
seq_start1_lsb[14]  = 0x00000000;
seq_start1_msb[14]  = 0x00;
