//
//  Copyright (C) 2021-2030 Laurent Ravera, IRAP Toulouse.
//  This file is part of the ATHENA X-IFU DRE test driving software.
//
//  ras-js is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
//  laurent.ravera@irap.omp.eu
//  configure_ras.dscript
//

include("./ras_tools.dscript")
include("./default_configurations.dscript")

//---------------------------------------------------------------------------------------
// Test session configuration
//operator_name=get_operator_name();
//session_name=get_session_name();
//session_comment = "No comment";


//---------------------------------------------------------------------------------------
// Timing configuration
// Fmasterclock=245.76 MHz, period=4.08ns
lineperiod = 160; // Nb of master clock periods 
delay = 222; // Nb of master clock periods
overlap = 0; // Nb of master clock periods


//---------------------------------------------------------------------------------------
// Levels configuration
// (1 ADU corresponds approximately to 1mV)
//    0x0D5 corresponds to 210mV
//    0x14A corresponds to 325mV (Phi0/2)
level=0x14A;
row_on_lvl = level; 
row_off_lvl = 0x000;
cluster_on_lvl = level;
cluster_off_lvl = 0x000;


//---------------------------------------------------------------------------------------
// Sequence configuration
nbrows = 8;
// Comment / uncomment the requested sequence
irow=1;
rowseq = seqAllOff();
rowseq = seqAlwaysOn(irow);
rowseq = seqBlink(irow);
rowseq = seqIncrementalIRAP();
rowseq = seqIncrementalIRAP();

syncseq = 0x00000002;


//---------------------------------------------------------------------------------------
// Sending the parameters to the firmware
print_board_and_fw_id();
configure_ras(nbrows, lineperiod, delay, overlap, rowseq, syncseq, row_on_lvl, row_off_lvl, cluster_on_lvl, cluster_off_lvl);


//---------------------------------------------------------------------------------------
