// -------------------------------------------------------------------------------------------------------------
//                              Copyright (C) 2022-2030 Laurent Ravera, IRAP Toulouse.
// -------------------------------------------------------------------------------------------------------------
//                              This file is part of the ATHENA X-IFU DRE SGSE tools.
//
//                              sgse tools javascripts are free software: you can redistribute it and/or modify
//                              it under the terms of the GNU General Public License as published by
//                              the Free Software Foundation, either version 3 of the License, or
//                              (at your option) any later version.
//
//                              This program is distributed in the hope that it will be useful,
//                              but WITHOUT ANY WARRANTY; without even the implied warranty of
//                              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//                              GNU General Public License for more details.
//
//                              You should have received a copy of the GNU General Public License
//                              along with this program.  If not, see <https://www.gnu.org/licenses/>.
// -------------------------------------------------------------------------------------------------------------
//    email                     laurent.ravera@irap.omp.eu
//    @file                     tc8_address_overlap.dscript
// -------------------------------------------------------------------------------------------------------------
//    @details
//
//    This script tests the setting of the address overlap.
//
// -------------------------------------------------------------------------------------------------------------

// imports
include("../ras/rasTools.dscript");
include("../ras/rasRegAddresses.dscript");
include("../ras/rasSequences.dscript");

include("../common/utilTools.dscript");
include("../common/constants.dscript");


/**
 * Checks the setting of the address overlap
 */
function tc8_address_overlap() {

    plotLongLine();
    print("* Checking the setting of the address delay");
    print(" ");


    var overlap = 0;
    print(TAB1 + "Setting the PS overlap to " + overlap);
	setRAS_seqMode(OFF);
    setRAS_psOverlap(overlap);
    setRAS_gsOverlap(overlap);
	setRAS_seqMode(ON);
    var answer1 = getText("Measure the delay between the falling edge of PS0 and the rising edge of PS1 (ns)", " ");
    print(TAB3 + "==> " + answer1 + " ns");
    var answer2 = getText("Measure the delay between the falling edge of GS0 and the rising edge of GS1 (ns)", " ");
    print(TAB3 + "==> " + answer2 + " ns");

    overlap = -8;
    print(TAB1 + "Setting the PS overlap to " + overlap);
	setRAS_seqMode(OFF);
    setRAS_psOverlap(overlap);
    setRAS_gsOverlap(overlap);
	setRAS_seqMode(ON);
    answer1 = getText("Measure the delay between the falling edge of PS0 and the rising edge of PS1 (ns)", " ");
    print(TAB3 + "==> " + answer1 + " ns");
    answer2 = getText("Measure the delay between the falling edge of GS0 and the rising edge of GS1 (ns)", " ");
    print(TAB3 + "==> " + answer2 + " ns");

    overlap = 7;
    print(TAB1 + "Setting the PS overlap to " + overlap);
	setRAS_seqMode(OFF);
    setRAS_psOverlap(overlap);
    setRAS_gsOverlap(overlap);
	setRAS_seqMode(ON);
    answer1 = getText("Measure the delay between the falling edge of PS0 and the rising edge of PS1 (ns)", " ");
    print(TAB3 + "==> " + answer1 + " ns");
    answer2 = getText("Measure the delay between the falling edge of GS0 and the rising edge of GS1 (ns)", " ");
    print(TAB3 + "==> " + answer2 + " ns");

    const step_ms = 1000;
    print(" ");
    print(TAB1 + "Scanning the PS overlap");
    answer = getText("Click when ready", " ");
	setRAS_seqMode(OFF);
    RASscan_overlap(true, false, step_ms, true)
	setRAS_seqMode(ON);

    print(" ");
    print(TAB1 + "Scanning the GS overlap");
    answer = getText("Click when ready", " ");
	setRAS_seqMode(OFF);
    RASscan_overlap(false, true, step_ms, true)
	setRAS_seqMode(ON);

    print(" ");

}

rasInit();
tc8_address_overlap();

print("End of script");
/**********************************************************************************************************************/

